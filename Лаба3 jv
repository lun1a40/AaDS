import java.util.*;

public class TSP {
    private static final int INF = Integer.MAX_VALUE;
    
    public static int tsp(int[][] graph) {
        int n = graph.length;
        int[][] dp = new int[1 << n][n];
        
        for (int[] row : dp) {
            Arrays.fill(row, INF);
        }
        dp[1][0] = 0;
        
        for (int mask = 1; mask < (1 << n); mask++) {
            for (int i = 0; i < n; i++) {
                if ((mask & (1 << i)) != 0) {
                    for (int j = 0; j < n; j++) {
                        if ((mask & (1 << j)) == 0 && graph[i][j] != 0) {
                            int newMask = mask | (1 << j);
                            dp[newMask][j] = Math.min(dp[newMask][j], 
                                                    dp[mask][i] + graph[i][j]);
                        }
                    }
                }
            }
        }
        
        int minCost = INF;
        int finalMask = (1 << n) - 1;
        for (int i = 1; i < n; i++) {
            if (graph[i][0] != 0) {
                minCost = Math.min(minCost, dp[finalMask][i] + graph[i][0]);
            }
        }
        
        return minCost;
    }
    
    public static void main(String[] args) {
        int[][] graph = {
            {0, 10, 15, 20},
            {10, 0, 35, 25},
            {15, 35, 0, 30},
            {20, 25, 30, 0}
        };
        
        int result = tsp(graph);
        System.out.println("Минимальная стоимость маршрута: " + result);
    }
}
