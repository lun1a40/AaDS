#include <iostream>
#include <vector>
#include <algorithm>
#include <climits>

using namespace std;

int tsp(vector<vector<int>>& graph, vector<bool>& visited, int curr, int n, int count, int cost, int& minCost) {
    if (count == n && graph[curr][0] > 0) {
        minCost = min(minCost, cost + graph[curr][0]);
        return minCost;
    }
    
    for (int i = 0; i < n; i++) {
        if (!visited[i] && graph[curr][i] > 0) {
            visited[i] = true;
            tsp(graph, visited, i, n, count + 1, cost + graph[curr][i], minCost);
            visited[i] = false;
        }
    }
    return minCost;
}

int main() {
    int n = 4;
    vector<vector<int>> graph = {
        {0, 10, 15, 20},
        {10, 0, 35, 25},
        {15, 35, 0, 30},
        {20, 25, 30, 0}
    };
    
    vector<bool> visited(n, false);
    visited[0] = true;
    int minCost = INT_MAX;
    
    int result = tsp(graph, visited, 0, n, 1, 0, minCost);
    cout << "Минимальная стоимость маршрута: " << result << endl;
    
    return 0;
}
